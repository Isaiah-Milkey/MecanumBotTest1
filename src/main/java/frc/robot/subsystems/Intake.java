// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;


import frc.robot.Constants;
import frc.robot.Robot;
import frc.robot.RobotContainer;
import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.PneumaticsModuleType;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.motorcontrol.MotorController;
import edu.wpi.first.wpilibj.motorcontrol.VictorSP;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Intake extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private Compressor intakeCompressor;
private DoubleSolenoid intakePiston;
private VictorSP intakeMotor;
private RobotContainer m_RobotContainer;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    /**
    *
    */
    public Intake() {

        //PASS THESE IN FROM ROBOTCONTAINER
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
// RobotContainer.intakeCompressor =  m_intakeCompressor;
//  addChild("intakeCompressor",m_intakeCompressor);
 

// RobotContainer.intakePiston =  m_intakePiston;
//  addChild("intakePiston", m_intakePiston);
 

// RobotContainer.intakeMotor =  m_intakeMotor;
//  addChild("intakeMotor",m_intakeMotor);

//  intakeCompressor = new Compressor(11, PneumaticsModuleType.CTREPCM);
    
 intakePiston = new DoubleSolenoid(PneumaticsModuleType.CTREPCM, Constants.doubleSolenoidForward,  Constants.doubleSolenoidReverse );
 
 intakeMotor = new VictorSP(Constants.intakeMotorID);



    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        // RobotContainer.intakeMotor = m_intakeMotor;
        // RobotContainer.intakePiston = m_intakePiston;
        // RobotContainer.intakeCompressor = m_intakeCompressor;
        // m_RobotContainer = new RobotContainer();
        // addRequirements(m_RobotContainer);

    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.
public void runIntakeMotor(double speed){
    speed = Constants.intakeSpeed;
intakeMotor.set(speed);
}

public void extendIntake(){
intakePiston.set(DoubleSolenoid.Value.kForward);
}
 
public void retractIntake(){
intakePiston.set(DoubleSolenoid.Value.kReverse);
}


}

